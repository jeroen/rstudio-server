#!/bin/sh

# errors shouldn't cause script to exit
set +e 

# add rserver user account
sudo useradd -r rstudio-server
sudo groupadd -r rstudio-server

# create softlink to admin script in /usr/sbin
sudo ln -f -s /usr/lib/rstudio-server/bin/rstudio-server /usr/sbin/rstudio-server

# create config directory
sudo mkdir -p /etc/rstudio

# create var directories
sudo mkdir -p /var/run/rstudio-server
sudo mkdir -p /var/lock/rstudio-server
sudo mkdir -p /var/log/rstudio-server
sudo mkdir -p /var/lib/rstudio-server
sudo mkdir -p /var/lib/rstudio-server/conf
sudo mkdir -p /var/lib/rstudio-server/body
sudo mkdir -p /var/lib/rstudio-server/proxy

# write installed indicator then force suspend active sessions
# (so that the new client is never paired against the old server)
sudo sh -c "echo `date +%s` > /var/lib/rstudio-server/installed"
sudo rstudio-server force-suspend-all

# check lsb release
LSB_RELEASE=`lsb_release --id --short`

# add apparmor profile
if test $LSB_RELEASE = "Ubuntu" && test -d /etc/apparmor.d/
then
   sudo cp /usr/lib/rstudio-server/extras/apparmor/rstudio-server /etc/apparmor.d/
   sudo apparmor_parser -r /etc/apparmor.d/rstudio-server 2>/dev/null
fi

# add upstart profile or init.d script and start the server
if test $LSB_RELEASE = "Ubuntu" && test -d /etc/init/
then
   sudo cp /usr/lib/rstudio-server/extras/upstart/rstudio-server.conf /etc/init/
   sudo initctl reload-configuration
   sudo initctl stop rstudio-server 2>/dev/null
   sudo initctl start rstudio-server
else
   sudo cp /usr/lib/rstudio-server/extras/init.d/debian/rstudio-server /etc/init.d/
   sudo chmod +x /etc/init.d/rstudio-server
   sudo update-rc.d rstudio-server defaults
   sudo /etc/init.d/rstudio-server stop  2>/dev/null
   sudo /etc/init.d/rstudio-server start
fi

# clear error termination state
set -e
